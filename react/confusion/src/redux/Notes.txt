action will have a type and payload which is the state.
write actionCreators which will create action objects for us with the type and payload.
create reducer functions that will take state and action object and based on action.type will give us the new state.
to createStore pass combineReducers({reducer1, reducer2, reducer3}) this is from redux
In App.js create a store object
In App.js enclose everything in <Provider store={store}>
In MainComponent use withRouter(connect(mapStateToProps,mapDispatchToProps)(MainComponent));
mapStateToProps will make the state in redux available as props in the js file.
mapDispatchToProps will allow us dispatch actions to the redux store. These will also be made available as props in the js file.
Using the dispatch methods available dispatch action objects created via the action creators. 
This will be listened by the store and the corresponding reducer will work on it and give the updated state.

Lood at redux folder for examples.